
package ecs_submit;

import Utilities.FileUtils;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;

/**
 *
 * @author Jeamathu
 */
public class SubmitFile3 extends javax.swing.JFrame {

    SubmitRepoImpl s = new SubmitRepoImpl();
    
    //all the variables needed to submit a coursework object is initialized.
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy_HH:mm:ss");
    StudentController control = new StudentController();
    Submited6 b = new Submited6();
    String SubmissionType;
    String SubmissionTitle;
    String SubmissionFile;
    String SubmissionText;
    int ReferenceNumber;
    int counter;
    String submitinfo;
    List<String> temp;

    public SubmitFile3() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        submissiontype = new javax.swing.JLabel();
        submissiontitle = new javax.swing.JLabel();
        filettosubmit = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        filetype = new javax.swing.JComboBox<>();
        Subtitle = new javax.swing.JTextField();
        filechoose = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tickbox = new javax.swing.JCheckBox();
        AddSubmission = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textfile = new javax.swing.JTextArea();
        texttosubmit = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(300, 130));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Sumit Paper");

        submissiontype.setText("Submission Type:");

        submissiontitle.setText("Submission Title*:");

        filettosubmit.setText("File to Submit:");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("   Refer to assignment brief for detailed requiements ");
        jLabel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        filetype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "File Upload", "Text Upload" }));
        filetype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filetypeActionPerformed(evt);
            }
        });

        Subtitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubtitleActionPerformed(evt);
            }
        });

        filechoose.setBackground(new java.awt.Color(153, 183, 181));
        filechoose.setText("Choose the file");
        filechoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filechooseActionPerformed(evt);
            }
        });

        jLabel4.setText("This assignment is my own work, except where I have acknowledged the use of the works of others or I am making a group submission.");

        tickbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tickboxActionPerformed(evt);
            }
        });

        AddSubmission.setBackground(new java.awt.Color(153, 183, 181));
        AddSubmission.setText("Add Submission");
        AddSubmission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSubmissionActionPerformed(evt);
            }
        });

        textfile.setColumns(20);
        textfile.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        textfile.setRows(5);
        jScrollPane1.setViewportView(textfile);

        texttosubmit.setText("Text to Submit:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(submissiontype)
                                .addGap(18, 18, 18)
                                .addComponent(filetype, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(submissiontitle)
                                    .addComponent(filettosubmit)
                                    .addComponent(texttosubmit))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Subtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(filechoose, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tickbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4))
                            .addComponent(AddSubmission, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(16, 16, 16)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submissiontype)
                    .addComponent(filetype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submissiontitle)
                    .addComponent(Subtitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filettosubmit)
                    .addComponent(filechoose))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(texttosubmit)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tickbox)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(AddSubmission, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tickboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tickboxActionPerformed

    }//GEN-LAST:event_tickboxActionPerformed

    private void AddSubmissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSubmissionActionPerformed
        String filetyp = filetype.getSelectedItem().toString();
        String subtitle = Subtitle.getText();
        String content = textfile.getText();
        boolean status = tickbox.isSelected();
        s.submitCourseworkCoursework(filetyp, subtitle, content, status);
        this.setVisible(false);
    }//GEN-LAST:event_AddSubmissionActionPerformed

    private void filechooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filechooseActionPerformed
        textfile.append(s.ChooseFile());
        try {
            
            /* This opens a window letting the user to choose the file
            that he/she wishes to open */
            JFileChooser chooser = new JFileChooser();
            int answer = chooser.showOpenDialog(this);
            if (answer == JFileChooser.APPROVE_OPTION) {
                File f = chooser.getSelectedFile();
                String filename = f.getAbsolutePath();
                String temp1 = retrieve(filename);
                System.out.println(temp1);
                display(temp1);
                // Buttons are enabled for the user to interact
                
            }
        } catch (NumberFormatException exception) {
            System.out.println("ERROR... The file that you are trying to"
                    + " open is not in a correct format!!!");
        }
                                         

    }//GEN-LAST:event_filechooseActionPerformed

    private void filetypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filetypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filetypeActionPerformed

    private void SubtitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubtitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SubtitleActionPerformed

        private String retrieve(String filename) {
        List<String> data = FileUtils.readIntoList(filename);
        String a = "";
        for (int i = 0; i < data.size(); i++) {
            a = data.get(i).toString();
        }
        return a;
    }

    // Simply displays all the objects stored within the 'model' list
    private void display(String content) {
            textfile.append(content);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubmitFile3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubmitFile3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubmitFile3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubmitFile3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubmitFile3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddSubmission;
    private javax.swing.JTextField Subtitle;
    private javax.swing.JButton filechoose;
    private javax.swing.JLabel filettosubmit;
    private javax.swing.JComboBox<String> filetype;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel submissiontitle;
    private javax.swing.JLabel submissiontype;
    private javax.swing.JTextArea textfile;
    private javax.swing.JLabel texttosubmit;
    private javax.swing.JCheckBox tickbox;
    // End of variables declaration//GEN-END:variables
private void close() {
        WindowEvent winClosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosing);
    }

}
